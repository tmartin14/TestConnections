Connection Testing - Making sure Splunk can access the outside world.

# Create a test_connection3.py file (python3)  for New Relic
import datetime
import requests
import base64

# Variables
timeout=3
use_proxy=False
proxyurl='http://username:password@proxy.zzzz.com:8080'
newr_url='https://api.newrelic.com/v2/applications.json'
newr_api_key='your_api_key'

print('Trying Google')
print('Start Time: ' + str(datetime.datetime.now()))
if use_proxy:
  response = requests.get('https://google.com/', proxies=proxies, timeout=timeout)
else:
  response = requests.get('https://google.com/', timeout=timeout)

print(response)
print('  End Time: ' + str(datetime.datetime.now()))


print('\n')
print('Start Time: ' + str(datetime.datetime.now()))
print('Trying New Relic API @ ' + newr_url)

# set up the headers
headers = {'X-Api-Key':'{}'.format(newr_api_key)}
print('  Headers= ' + str(headers))

if use_proxy:
  response = requests.get(newr_url, headers=headers, timeout=timeout, proxies=proxies)
else:
  response = requests.get(newr_url, headers=headers, timeout=timeout)

print(response)
print('  End Time: ' + str(datetime.datetime.now()))


##### Run this command
#/opt/splunk/bin/splunk cmd python3 test_connection3.py
 

 # New Relic helpers
#website:  https://rpm.newrelic.com/api/explore/applications/list
#command (no proxy): curl -X GET 'https://api.newrelic.com/v2/applications.json'  -H 'X-Api-Key:{api_key}' -i 
#command (w/proxy) : curl -v -L -x http://proxy.zzzz.com:8080 --proxy-user user:pass -X GET 'https://api.newrelic.com/v2/applications.json'  -H 'X-Api-Key:{api_key}' -i 

 
-----------------------------------------------------------------------

# Create a test_connection27.py file (python2)  for New Relic
import datetime
import urllib2
import base64

# Variables
timeout=3
use_proxy=False
proxies = {
    'http': 'http://username:password@10.10.1.0:3128',
    'https': 'https://username:password@10.10.1.0:3128',
}
newr_url='https://api.newrelic.com/v2/applications.json'
newr_api_key='your_api_key'

# Setup the proxy
proxy = urllib2.ProxyHandler({'http': proxyurl})
opener = urllib2.build_opener(proxy)
urllib2.install_opener(opener)

print('Start Time: ' + str(datetime.datetime.now()))
print('Trying Google')
response = urllib2.urlopen('https://google.com/',timeout=timeout)
print(response.getcode())
print('  End Time: ' + str(datetime.datetime.now()))


print('\n')
print('Start Time: ' + str(datetime.datetime.now()))
print('Trying New Relic API @ ' + newr_url)

# set up the headers
headers = {'X-Api-Key':'{}'.format(newr_api_key)}
print('  Headers= ' + str(headers))

# Test the connection
request =  urllib2.Request(appd_url, headers=headers)
response = urllib2.urlopen(request, timeout=timeout)

print(response.code)
print(response.read())
print('  End Time: ' + str(datetime.datetime.now()))


##### Run this command
#/opt/splunk/bin/splunk cmd python2 test_connection27.py
 



-----------------------------------------------------------------------
#  Create a test_connection27.py file (python2)  for New Relic Insights
import datetime
import urllib2
import base64

# Variables
timeout=3
use_proxy=False
proxyurl='http://username:password@proxy.zzzz.com:8080'

#newr_url='https://api.newrelic.com/v2/applications.json'
newr_url='https://insights-api.newrelic.com/v1/accounts/<your account>/query?nrql=SELECT%20average(duration)%20FROM%20PageView'
newr_api_key='your_api_key'


# Setup the proxy
proxy = urllib2.ProxyHandler({'http': proxyurl})
opener = urllib2.build_opener(proxy)
urllib2.install_opener(opener)

print('*******   Start Time: ' + str(datetime.datetime.now()))
print('Trying Google')
response = urllib2.urlopen('https://google.com/',timeout=timeout)
print(response.getcode())
print('*******   End Time: ' + str(datetime.datetime.now()))
print('\n')


print('*******  Start Time: ' + str(datetime.datetime.now()))
print('Trying New Relic API @ ' + newr_url)

# set up the headers
#headers = {'X-Api-Key':'{}'.format(newr_api_key)}
headers = {'X-Query-Key':'{}'.format(newr_api_key)}
print('  Headers= ' + str(headers))

# Test the connection
request =  urllib2.Request(newr_url, headers=headers)
response = urllib2.urlopen(request, timeout=timeout)

print(response.code)
print(response.read())

print('*******  End Time: ' + str(datetime.datetime.now()))
print('\n')


##### Run this command
#/opt/splunk/bin/splunk cmd python2 test_connection27.py

-----------------------------------------------------------------------
 

# Create a test_connection3.py file (python3)  for AppDynamics
import datetime
import requests
import base64

# Variables
timeout=3
use_proxy=False
proxies = {
    'http': 'http://username:password@10.10.1.0:3128',
    'https': 'https://username:password@10.10.1.0:3128',
}
appd_url='https://pss-it-appd-controller.prod.aws.glic.com:8181/controller/rest/applications'
appd_connect_string = "appd_user@customer1:appd_password"

print('Trying Google')
print('Start Time: ' + str(datetime.datetime.now()))
if use_proxy:
  response = requests.get('https://google.com/', proxies=proxies, timeout=timeout)
else:
  response = requests.get('https://google.com/', timeout=timeout)

print(response)
print('  End Time: ' + str(datetime.datetime.now()))


print('\n')
print('Start Time: ' + str(datetime.datetime.now()))
print('Trying AppDynamics Controlleri @ ' + appd_url)

# set up the headers
auth_token = base64.b64encode(appd_connect_string.encode("ascii")).decode("ascii")
headers =  {'Authorization': 'Basic {}'.format(auth_token)}
print('  Headers= ' + str(headers))

if use_proxy:
  response = requests.get(appd_url, headers=headers, timeout=timeout, proxies=proxies)
else:
  response = requests.get(appd_url, headers=headers, timeout=timeout)

print(response)
print('  End Time: ' + str(datetime.datetime.now()))

 
##### Run this command
#/opt/splunk/bin/splunk cmd python3 test_connection3.py
 

 
-----------------------------------------------------------------------
 
# Create a test_connection27.py file (python2.7)     for AppDynamics

import datetime
import urllib2
import base64

# Varialbes
timeout=3
proxyurl='http://username:password@proxy.zzzz.com:8080'
appd_url='https://your-appd-controller:8181/controller/rest/applications'
appd_connect_string = "appd_user@customer1:appd_password"


# Setup the proxy
proxy = urllib2.ProxyHandler({'http': proxyurl})
opener = urllib2.build_opener(proxy)
urllib2.install_opener(opener)

print('Trying Google')
print('Start Time: ' + str(datetime.datetime.now()))
response = urllib2.urlopen('https://google.com/',timeout=timeout)
print(response.getcode())
print('  End Time: ' + str(datetime.datetime.now()))

print('\n')
print('Trying AppDynamics Controller @ '+ appd_url)
print('Start Time: ' + str(datetime.datetime.now()))

# set up the headers
auth_token = base64.b64encode(appd_connect_string.encode("ascii")).decode("ascii")
headers =  {'Authorization': 'Basic {}'.format(auth_token)}

# Test the connection
request =  urllib2.Request(appd_url, headers=headers)
response = urllib2.urlopen(request, timeout=timeout)

print(response.code)
print(response.read())
print('  End Time: ' + str(datetime.datetime.now()))


##### Run this command
#/opt/splunk/bin/splunk cmd python2 test_connection27.py
 
 
-----------------------------------------------------------------------
 
 # AppDynamics helpers
#website:  https://docs.appdynamics.com/display/PRO45/Application+Model+API#ApplicationModelAPI-RetrieveAllBusinessApplications
#command (no proxy): curl -v -L user:pass --user user1@customer1:appd_password "https://host:port/controller/rest/applications" 

#command (w/proxy) : curl -v -L -x http://proxy.zzzz.com:8080 --proxy-user user:pass --user user1@customer1:appd_password "https://host:port/controller/rest/applications"

